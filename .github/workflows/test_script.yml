name: Test Bash Script

on:
  push:
    branches:
      - main

permissions:
  contents: read
  issues: write

env:
  ERROR: 'ðŸ˜¤ Please check the logs for more information.'

jobs:
  test_script:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup environment
        run: echo "TERM=xterm" >> $GITHUB_ENV

      - name: Set execute permissions on script
        run: |
          chmod +x install.sh

      - name: Run Script with Default URL
        run: |
          ./install.sh -s -y

      - name: Test Dotfiles Installation
        run: |
          [[ -d /home/linuxbrew/.linuxbrew ]] || [[ -d /usr/local/Homebrew ]] || exit 1
          [[ -d ~/.config ]] || exit 1
          [[ -f ~/.czrc ]] || exit 1
          [[ -f ~/.gitconfig ]] || exit 1
          [[ -f ~/.gitignore ]] || exit 1

      - name: Cleanup
        run: |
          echo "Cleaning up config files..."
          rm -rf ~/.config
          rm -rf ~/.czrc
          rm -rf ~/.gitconfig
          rm -rf ~/.gitignore
          echo "Cleaning up path Homebrew..."
          rm -rf /home/linuxbrew/.linuxbrew

      - name: Capture Workflow Artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Logs
          path: ~/dotfile_test

      - name: Run script and capture errors
        if: failure()
        id: error_capture
        run: |
          echo "ERROR='' >> $GITHUB_ENV"
          ./install.sh -s -y -u https://github.com/PunGrumpy/dotfiles.git 2> error.log || echo "ERROR=$(cat error.log)" >> $GITHUB_ENV

      - name: Create Issue on Failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          SERVER_URL: ${{ github.server_url }}
          REPOSITORY: ${{ github.repository }}
          ACTION_ID: ${{ github.run_id }}
          ISSUE_TITLE: '[${{ github.workflow }}]: Error in job `${{ github.job }}`'
          ERROR_MESSAGE: ${{ env.ERROR }}
